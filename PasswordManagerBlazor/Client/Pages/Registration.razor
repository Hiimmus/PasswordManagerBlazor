@page "/registration"
@inject NavigationManager navigationManager
@using System.ComponentModel.DataAnnotations
@using PasswordManagerBlazor.Shared.DTOs
@inject HttpClient Http

<head>
    <meta charset="UTF-8">
    <link href="css/main.css" rel="stylesheet" />
    <link href="css/alerts.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css" integrity="sha512-YWzhKL2whUzgiheMoBFwW8CKV4qpHQAEuvilg9FAn5VJUDwKZZxkJNuGM4XkWuk94WCrrwslk8yWNGmY1EduTA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<h2>Password Manager Registration Page</h2>
<br>
<EditForm Model="@registrationModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

<body>
	<div class="container" id="container">
		<div class="form-container sign-in-container">
			<form class=registration method="post">
                    <h1 id="sign-in">Sign Up</h1>
                    <div class="form-group">
                        <InputText id="firstName" class="form-control" placeholder="First Name" @bind-Value="@registrationModel.FirstName" />
                    </div>
                    <div class="form-group">
                        <InputText id="lastName" class="form-control" placeholder="Last Name" @bind-Value="@registrationModel.LastName" />
                    </div>
                    <div class="form-group">
                        <InputText id="email" class="form-control" placeholder="E-mail" @bind-Value="@registrationModel.Email" />
                    </div>
                    <div class="form-group">
                        <InputText id="confirmEmail" class="form-control" placeholder="Confirm E-mail" @bind-Value="@registrationModel.ConfirmEmail" />
                    </div>
                    <div class="form-group">
                        <InputText id="passwd" class="form-control" type="password" placeholder="Password" @bind-Value="@registrationModel.Password" />
                    </div>
                    <div class="form-group">
                        <InputText id="confirmPassword" class="form-control" type="password" placeholder="Confirm Password" @bind-Value="@registrationModel.ConfirmPassword" />
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="terms">
                            <InputCheckbox id="terms" @bind-Value="@registrationModel.Terms" /> I agree with the <a href="#">terms and conditions</a> for Registration.
                        </label>
                    </div>
				<br>
                    <button type="submit" class="btn btn-success">Register</button>
			</form>
		</div>
		<div class="overlay-container">
			<div class="overlay">
				<div class="overlay-panel overlay-right">
					<h1>Already registered?</h1>
					<p>Go to login page:</p>
					<button class="ghost" id="signUp" @onclick="NavigateToLogin" value="Sign In">Sign In</button>
				</div>
			</div>
		</div>
	</div>
        <p>Already registered? <a href="/">Sign In</a></p>
</body>
  
</EditForm>

<p>Already registered? <a href="/">Sign In</a></p>

@code {
    private RegistrationModel registrationModel = new RegistrationModel();

   private async Task HandleValidSubmit()
{
    var userDto = new UserRegistrationDto 
    {
        Email = registrationModel.Email,
        Password = registrationModel.Password,
        FirstName = registrationModel.FirstName,
        LastName = registrationModel.LastName
    };

    try
    {
        var response = await Http.PostAsJsonAsync("api/user/register", userDto);
        if (response.IsSuccessStatusCode)
        {
            // Zarejestrowano pomyślnie
            navigationManager.NavigateTo("login");
        }
        else
        {
            // Błąd rejestracji
            Console.WriteLine($"Error: {response.StatusCode} {response.ReasonPhrase}");
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Exception: {ex.Message}");
    }
}



    private void NavigateToLogin()
    {
        navigationManager.NavigateTo("login");
    }

    public class RegistrationModel
    {
        [Required(ErrorMessage = "First Name is required.")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "Last Name is required.")]
        public string LastName { get; set; }

        [Required(ErrorMessage = "E-mail is required.")]
        [EmailAddress(ErrorMessage = "Invalid E-mail.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Confirm E-mail is required.")]
        [EmailAddress(ErrorMessage = "Invalid Confirm E-mail.")]
        [Compare("Email", ErrorMessage = "E-mails do not match.")]
        public string ConfirmEmail { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters.")]
        public string Password { get; set; }

        [Required(ErrorMessage = "Confirm Password is required.")]
        [Compare("Password", ErrorMessage = "Passwords do not match.")]
        public string ConfirmPassword { get; set; }

        [Required(ErrorMessage = "You must agree with the terms and conditions.")]
        public bool Terms { get; set; }
    }
}
